stages:
  - lint
  - test
  - build
  - deploy

variables:
  CI_GITLAB_API_TOKEN: $CI_GITLAB_API_TOKEN
  DOCKER_REPOSITORY_IMAGE: $DOCKER_REPOSITORY_IMAGE

lint:
  stage: lint
  image: $BUILD_DOCKER_IMAGE
  script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker build --network=host -t react:latest .
    - docker run --rm --name react react:latest npm run lint

test:
  stage: test
  image: $BUILD_DOCKER_IMAGE
  script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - docker build --network=host -t react:latest .
    - docker run --rm --name react react:latest npm run test:ci

build:
  stage: build
  only:
    - main
    - develop
  image: $BUILD_DOCKER_IMAGE
  script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
    - >
      docker build
      --build-arg SKIP_PREFLIGHT_CHECK=$SKIP_PREFLIGHT_CHECK
      --network=host -t ${DOCKER_REPOSITORY_IMAGE} .
    - docker push ${DOCKER_REPOSITORY_IMAGE}

deploy:
  stage: deploy
  only:
    - main
    - develop
  image: $DEPLOY_DOCKER_IMAGE
  script:
    - grdp-ctl

